openapi: 3.0.0
info:
  title: jobs api
  contact: {}
  version: '1.0'
servers:
- url: https://turquoise-hen-hem.cyclic.cloud/api/v1
  variables: {}
paths:
  /jobs:
    get:
      tags:
      - jobs
      summary: get all jobs
      operationId: getalljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    post:
      tags:
      - jobs
      summary: post job
      operationId: postjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/postjobrequest'
              - example:
                  company: amazoon
                  position: frontt end dev
            example:
              company: amazoon
              position: frontt end dev
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
      - jobs
      summary: get single job
      operationId: getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    patch:
      tags:
      - jobs
      summary: update task
      operationId: updatetask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/updatetaskrequest'
              - example:
                  name: subul
                  position: bback endd
            example:
              name: subul
              position: bback endd
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - jobs
      summary: delete job
      operationId: deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /auth/register:
    post:
      tags:
      - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/registerrequest'
              - example:
                  name: saaad
                  email: saad@gmail.com
                  password: '123456'
            example:
              name: saaad
              email: saad@gmail.com
              password: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/loginrequest'
              - example:
                  email: saad@gmail.com
                  password: '123456'
            example:
              email: saad@gmail.com
              password: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    postjobrequest:
      title: postjobrequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: amazoon
        position: frontt end dev
    registerrequest:
      title: registerrequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: saaad
        email: saad@gmail.com
        password: '123456'
    loginrequest:
      title: loginrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: saad@gmail.com
        password: '123456'
    updatetaskrequest:
      title: updatetaskrequest
      required:
      - name
      - position
      type: object
      properties:
        name:
          type: string
        position:
          type: string
      example:
        name: subul
        position: bback endd
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: jobs
  description: ''
- name: Auth
  description: ''
